// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FieldMessage.proto

#include "FieldMessage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_FieldMessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntField_FieldMessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_FieldMessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StrField_FieldMessage_2eproto;
namespace FieldMessage {
class IntFieldListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntFieldList> _instance;
} _IntFieldList_default_instance_;
class IntFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntField> _instance;
} _IntField_default_instance_;
class StrFieldListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StrFieldList> _instance;
} _StrFieldList_default_instance_;
class StrFieldDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StrField> _instance;
} _StrField_default_instance_;
}  // namespace FieldMessage
static void InitDefaultsscc_info_IntField_FieldMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FieldMessage::_IntField_default_instance_;
    new (ptr) ::FieldMessage::IntField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FieldMessage::IntField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntField_FieldMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IntField_FieldMessage_2eproto}, {}};

static void InitDefaultsscc_info_IntFieldList_FieldMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FieldMessage::_IntFieldList_default_instance_;
    new (ptr) ::FieldMessage::IntFieldList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FieldMessage::IntFieldList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IntFieldList_FieldMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IntFieldList_FieldMessage_2eproto}, {
      &scc_info_IntField_FieldMessage_2eproto.base,}};

static void InitDefaultsscc_info_StrField_FieldMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FieldMessage::_StrField_default_instance_;
    new (ptr) ::FieldMessage::StrField();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FieldMessage::StrField::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StrField_FieldMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StrField_FieldMessage_2eproto}, {}};

static void InitDefaultsscc_info_StrFieldList_FieldMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::FieldMessage::_StrFieldList_default_instance_;
    new (ptr) ::FieldMessage::StrFieldList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FieldMessage::StrFieldList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StrFieldList_FieldMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StrFieldList_FieldMessage_2eproto}, {
      &scc_info_StrField_FieldMessage_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_FieldMessage_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_FieldMessage_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_FieldMessage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_FieldMessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FieldMessage::IntFieldList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FieldMessage::IntFieldList, fieldlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FieldMessage::IntField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FieldMessage::IntField, delta_),
  PROTOBUF_FIELD_OFFSET(::FieldMessage::IntField, fieldvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FieldMessage::StrFieldList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FieldMessage::StrFieldList, fieldlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FieldMessage::StrField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FieldMessage::StrField, delta_),
  PROTOBUF_FIELD_OFFSET(::FieldMessage::StrField, fieldvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::FieldMessage::IntFieldList)},
  { 6, -1, sizeof(::FieldMessage::IntField)},
  { 13, -1, sizeof(::FieldMessage::StrFieldList)},
  { 19, -1, sizeof(::FieldMessage::StrField)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::FieldMessage::_IntFieldList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::FieldMessage::_IntField_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::FieldMessage::_StrFieldList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::FieldMessage::_StrField_default_instance_),
};

const char descriptor_table_protodef_FieldMessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022FieldMessage.proto\022\014FieldMessage\"9\n\014In"
  "tFieldList\022)\n\tfieldList\030\001 \003(\0132\026.FieldMes"
  "sage.IntField\"-\n\010IntField\022\r\n\005delta\030\001 \001(\r"
  "\022\022\n\nfieldValue\030\002 \001(\r\"9\n\014StrFieldList\022)\n\t"
  "fieldList\030\001 \003(\0132\026.FieldMessage.StrField\""
  "-\n\010StrField\022\r\n\005delta\030\001 \001(\r\022\022\n\nfieldValue"
  "\030\002 \001(\tb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_FieldMessage_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_FieldMessage_2eproto_sccs[4] = {
  &scc_info_IntField_FieldMessage_2eproto.base,
  &scc_info_IntFieldList_FieldMessage_2eproto.base,
  &scc_info_StrField_FieldMessage_2eproto.base,
  &scc_info_StrFieldList_FieldMessage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_FieldMessage_2eproto_once;
static bool descriptor_table_FieldMessage_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_FieldMessage_2eproto = {
  &descriptor_table_FieldMessage_2eproto_initialized, descriptor_table_protodef_FieldMessage_2eproto, "FieldMessage.proto", 254,
  &descriptor_table_FieldMessage_2eproto_once, descriptor_table_FieldMessage_2eproto_sccs, descriptor_table_FieldMessage_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_FieldMessage_2eproto::offsets,
  file_level_metadata_FieldMessage_2eproto, 4, file_level_enum_descriptors_FieldMessage_2eproto, file_level_service_descriptors_FieldMessage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_FieldMessage_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_FieldMessage_2eproto), true);
namespace FieldMessage {

// ===================================================================

void IntFieldList::InitAsDefaultInstance() {
}
class IntFieldList::_Internal {
 public:
};

IntFieldList::IntFieldList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FieldMessage.IntFieldList)
}
IntFieldList::IntFieldList(const IntFieldList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      fieldlist_(from.fieldlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:FieldMessage.IntFieldList)
}

void IntFieldList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IntFieldList_FieldMessage_2eproto.base);
}

IntFieldList::~IntFieldList() {
  // @@protoc_insertion_point(destructor:FieldMessage.IntFieldList)
  SharedDtor();
}

void IntFieldList::SharedDtor() {
}

void IntFieldList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntFieldList& IntFieldList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntFieldList_FieldMessage_2eproto.base);
  return *internal_default_instance();
}


void IntFieldList::Clear() {
// @@protoc_insertion_point(message_clear_start:FieldMessage.IntFieldList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fieldlist_.Clear();
  _internal_metadata_.Clear();
}

const char* IntFieldList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .FieldMessage.IntField fieldList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fieldlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IntFieldList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FieldMessage.IntFieldList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .FieldMessage.IntField fieldList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_fieldlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_fieldlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FieldMessage.IntFieldList)
  return target;
}

size_t IntFieldList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FieldMessage.IntFieldList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .FieldMessage.IntField fieldList = 1;
  total_size += 1UL * this->_internal_fieldlist_size();
  for (const auto& msg : this->fieldlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntFieldList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FieldMessage.IntFieldList)
  GOOGLE_DCHECK_NE(&from, this);
  const IntFieldList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntFieldList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FieldMessage.IntFieldList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FieldMessage.IntFieldList)
    MergeFrom(*source);
  }
}

void IntFieldList::MergeFrom(const IntFieldList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FieldMessage.IntFieldList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fieldlist_.MergeFrom(from.fieldlist_);
}

void IntFieldList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FieldMessage.IntFieldList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntFieldList::CopyFrom(const IntFieldList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FieldMessage.IntFieldList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntFieldList::IsInitialized() const {
  return true;
}

void IntFieldList::InternalSwap(IntFieldList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  fieldlist_.InternalSwap(&other->fieldlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntFieldList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IntField::InitAsDefaultInstance() {
}
class IntField::_Internal {
 public:
};

IntField::IntField()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FieldMessage.IntField)
}
IntField::IntField(const IntField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&delta_, &from.delta_,
    static_cast<size_t>(reinterpret_cast<char*>(&fieldvalue_) -
    reinterpret_cast<char*>(&delta_)) + sizeof(fieldvalue_));
  // @@protoc_insertion_point(copy_constructor:FieldMessage.IntField)
}

void IntField::SharedCtor() {
  ::memset(&delta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fieldvalue_) -
      reinterpret_cast<char*>(&delta_)) + sizeof(fieldvalue_));
}

IntField::~IntField() {
  // @@protoc_insertion_point(destructor:FieldMessage.IntField)
  SharedDtor();
}

void IntField::SharedDtor() {
}

void IntField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntField& IntField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntField_FieldMessage_2eproto.base);
  return *internal_default_instance();
}


void IntField::Clear() {
// @@protoc_insertion_point(message_clear_start:FieldMessage.IntField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&delta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fieldvalue_) -
      reinterpret_cast<char*>(&delta_)) + sizeof(fieldvalue_));
  _internal_metadata_.Clear();
}

const char* IntField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 delta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          delta_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 fieldValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          fieldvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IntField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FieldMessage.IntField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 delta = 1;
  if (this->delta() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_delta(), target);
  }

  // uint32 fieldValue = 2;
  if (this->fieldvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_fieldvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FieldMessage.IntField)
  return target;
}

size_t IntField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FieldMessage.IntField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 delta = 1;
  if (this->delta() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_delta());
  }

  // uint32 fieldValue = 2;
  if (this->fieldvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_fieldvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FieldMessage.IntField)
  GOOGLE_DCHECK_NE(&from, this);
  const IntField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FieldMessage.IntField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FieldMessage.IntField)
    MergeFrom(*source);
  }
}

void IntField::MergeFrom(const IntField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FieldMessage.IntField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.delta() != 0) {
    _internal_set_delta(from._internal_delta());
  }
  if (from.fieldvalue() != 0) {
    _internal_set_fieldvalue(from._internal_fieldvalue());
  }
}

void IntField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FieldMessage.IntField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntField::CopyFrom(const IntField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FieldMessage.IntField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntField::IsInitialized() const {
  return true;
}

void IntField::InternalSwap(IntField* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(delta_, other->delta_);
  swap(fieldvalue_, other->fieldvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntField::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StrFieldList::InitAsDefaultInstance() {
}
class StrFieldList::_Internal {
 public:
};

StrFieldList::StrFieldList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FieldMessage.StrFieldList)
}
StrFieldList::StrFieldList(const StrFieldList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      fieldlist_(from.fieldlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:FieldMessage.StrFieldList)
}

void StrFieldList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StrFieldList_FieldMessage_2eproto.base);
}

StrFieldList::~StrFieldList() {
  // @@protoc_insertion_point(destructor:FieldMessage.StrFieldList)
  SharedDtor();
}

void StrFieldList::SharedDtor() {
}

void StrFieldList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StrFieldList& StrFieldList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StrFieldList_FieldMessage_2eproto.base);
  return *internal_default_instance();
}


void StrFieldList::Clear() {
// @@protoc_insertion_point(message_clear_start:FieldMessage.StrFieldList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fieldlist_.Clear();
  _internal_metadata_.Clear();
}

const char* StrFieldList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .FieldMessage.StrField fieldList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fieldlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StrFieldList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FieldMessage.StrFieldList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .FieldMessage.StrField fieldList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_fieldlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_fieldlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FieldMessage.StrFieldList)
  return target;
}

size_t StrFieldList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FieldMessage.StrFieldList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .FieldMessage.StrField fieldList = 1;
  total_size += 1UL * this->_internal_fieldlist_size();
  for (const auto& msg : this->fieldlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StrFieldList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FieldMessage.StrFieldList)
  GOOGLE_DCHECK_NE(&from, this);
  const StrFieldList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StrFieldList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FieldMessage.StrFieldList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FieldMessage.StrFieldList)
    MergeFrom(*source);
  }
}

void StrFieldList::MergeFrom(const StrFieldList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FieldMessage.StrFieldList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fieldlist_.MergeFrom(from.fieldlist_);
}

void StrFieldList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FieldMessage.StrFieldList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StrFieldList::CopyFrom(const StrFieldList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FieldMessage.StrFieldList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrFieldList::IsInitialized() const {
  return true;
}

void StrFieldList::InternalSwap(StrFieldList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  fieldlist_.InternalSwap(&other->fieldlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StrFieldList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StrField::InitAsDefaultInstance() {
}
class StrField::_Internal {
 public:
};

StrField::StrField()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FieldMessage.StrField)
}
StrField::StrField(const StrField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fieldvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fieldvalue().empty()) {
    fieldvalue_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fieldvalue_);
  }
  delta_ = from.delta_;
  // @@protoc_insertion_point(copy_constructor:FieldMessage.StrField)
}

void StrField::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StrField_FieldMessage_2eproto.base);
  fieldvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delta_ = 0u;
}

StrField::~StrField() {
  // @@protoc_insertion_point(destructor:FieldMessage.StrField)
  SharedDtor();
}

void StrField::SharedDtor() {
  fieldvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StrField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StrField& StrField::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StrField_FieldMessage_2eproto.base);
  return *internal_default_instance();
}


void StrField::Clear() {
// @@protoc_insertion_point(message_clear_start:FieldMessage.StrField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fieldvalue_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delta_ = 0u;
  _internal_metadata_.Clear();
}

const char* StrField::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 delta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          delta_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fieldValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_fieldvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "FieldMessage.StrField.fieldValue"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StrField::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FieldMessage.StrField)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 delta = 1;
  if (this->delta() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_delta(), target);
  }

  // string fieldValue = 2;
  if (this->fieldvalue().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fieldvalue().data(), static_cast<int>(this->_internal_fieldvalue().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "FieldMessage.StrField.fieldValue");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_fieldvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FieldMessage.StrField)
  return target;
}

size_t StrField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FieldMessage.StrField)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string fieldValue = 2;
  if (this->fieldvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fieldvalue());
  }

  // uint32 delta = 1;
  if (this->delta() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_delta());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StrField::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FieldMessage.StrField)
  GOOGLE_DCHECK_NE(&from, this);
  const StrField* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StrField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FieldMessage.StrField)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FieldMessage.StrField)
    MergeFrom(*source);
  }
}

void StrField::MergeFrom(const StrField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FieldMessage.StrField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fieldvalue().size() > 0) {

    fieldvalue_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.fieldvalue_);
  }
  if (from.delta() != 0) {
    _internal_set_delta(from._internal_delta());
  }
}

void StrField::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FieldMessage.StrField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StrField::CopyFrom(const StrField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FieldMessage.StrField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrField::IsInitialized() const {
  return true;
}

void StrField::InternalSwap(StrField* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  fieldvalue_.Swap(&other->fieldvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(delta_, other->delta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StrField::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace FieldMessage
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::FieldMessage::IntFieldList* Arena::CreateMaybeMessage< ::FieldMessage::IntFieldList >(Arena* arena) {
  return Arena::CreateInternal< ::FieldMessage::IntFieldList >(arena);
}
template<> PROTOBUF_NOINLINE ::FieldMessage::IntField* Arena::CreateMaybeMessage< ::FieldMessage::IntField >(Arena* arena) {
  return Arena::CreateInternal< ::FieldMessage::IntField >(arena);
}
template<> PROTOBUF_NOINLINE ::FieldMessage::StrFieldList* Arena::CreateMaybeMessage< ::FieldMessage::StrFieldList >(Arena* arena) {
  return Arena::CreateInternal< ::FieldMessage::StrFieldList >(arena);
}
template<> PROTOBUF_NOINLINE ::FieldMessage::StrField* Arena::CreateMaybeMessage< ::FieldMessage::StrField >(Arena* arena) {
  return Arena::CreateInternal< ::FieldMessage::StrField >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
